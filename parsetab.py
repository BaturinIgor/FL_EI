
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN COMMA COMPAR CON DEF DEN DIS DIV ELSE EQ GT ID IF LBR LESEQ LFBR LT MOREQ MULT NE NUM PLUS POW RBR RETURN RFBR SEMICOLON SUB WHILEprogram : progbody funcprogbody :\n                | progbody funcfunc : DEF ID LBR args RBR LFBR funcbody RFBRargs :\n            | ID\n            | args COMMA IDfuncbody :\n                | funcbody if\n                | funcbody funcall\n                | funcbody assign\n                | funcbody while\n                | funcbody returnassign : ID ASSIGN expression SEMICOLON\n              | ID ASSIGN funcallfuncall : ID LBR args RBR SEMICOLON\n               | ID LBR args RBRif : IF LBR expression RBR LFBR funcbody RFBR elsebranchelsebranch :\n                  | ELSE LFBR funcbody RFBRwhile : WHILE LBR expression RBR LFBR funcbody RFBRreturn : RETURN LBR expression RBR SEMICOLON\n              | RETURN LBR ID RBR SEMICOLON expression : expression PLUS term\n                  | ID PLUS term\n                  | funcall PLUS termexpression : expression SUB term\n                  | ID SUB termexpression : expression MOREQ expression\n                  | expression LESEQ expression\n                  | expression LT expression\n                  | expression GT expression\n                  | expression EQ expression\n                  | expression NE expressionexpression : expression DIS termexpression : term\n                  | ID\n                  | funcallterm : term MULT factorterm : term CON factorterm : term DIV factorterm : factor\n            | ID\n            | funcallfactor : NUMfactor : DEN expressionfactor : factor POW expressionfactor : expression\n              | LBR expression RBR'
    
_lr_action_items = {'DEF':([0,2,3,15,],[-2,4,-3,-4,]),'$end':([1,3,15,],[0,-1,-4,]),'ID':([4,6,10,11,13,16,17,18,19,20,24,25,26,27,28,32,34,37,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,67,88,89,90,91,92,93,94,95,96,98,99,100,],[5,7,12,-8,14,-9,-10,-11,-12,-13,7,30,30,30,42,-15,30,30,-17,68,68,-14,68,68,30,30,30,30,30,30,68,68,30,30,30,30,-16,-8,-8,-22,-23,14,14,-19,-21,-18,-8,14,-20,]),'LBR':([5,14,21,22,23,25,26,27,28,30,34,37,42,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,61,68,],[6,24,26,27,28,34,34,34,34,24,34,34,24,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,24,]),'RBR':([6,7,8,12,24,29,30,33,35,36,38,39,40,41,42,43,60,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[-5,-6,9,-7,-5,43,-37,-36,-42,-45,63,-38,64,65,66,-17,86,-46,-16,-37,-25,-38,-48,-28,-24,-27,-29,-30,-31,-32,-33,-34,-35,-26,-39,-40,-41,-49,-47,]),'COMMA':([6,7,8,12,24,29,],[-5,-6,10,-7,-5,10,]),'LFBR':([9,63,64,97,],[11,88,89,98,]),'RFBR':([11,13,16,17,18,19,20,32,43,46,67,88,89,90,91,92,93,94,95,96,98,99,100,],[-8,15,-9,-10,-11,-12,-13,-15,-17,-14,-16,-8,-8,-22,-23,94,95,-19,-21,-18,-8,100,-20,]),'IF':([11,13,16,17,18,19,20,32,43,46,67,88,89,90,91,92,93,94,95,96,98,99,100,],[-8,21,-9,-10,-11,-12,-13,-15,-17,-14,-16,-8,-8,-22,-23,21,21,-19,-21,-18,-8,21,-20,]),'WHILE':([11,13,16,17,18,19,20,32,43,46,67,88,89,90,91,92,93,94,95,96,98,99,100,],[-8,22,-9,-10,-11,-12,-13,-15,-17,-14,-16,-8,-8,-22,-23,22,22,-19,-21,-18,-8,22,-20,]),'RETURN':([11,13,16,17,18,19,20,32,43,46,67,88,89,90,91,92,93,94,95,96,98,99,100,],[-8,23,-9,-10,-11,-12,-13,-15,-17,-14,-16,-8,-8,-22,-23,23,23,-19,-21,-18,-8,23,-20,]),'ASSIGN':([14,],[25,]),'NUM':([25,26,27,28,34,37,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,61,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'DEN':([25,26,27,28,34,37,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,61,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'PLUS':([30,31,32,33,35,36,38,39,40,41,42,43,60,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[44,47,56,-36,-42,-45,47,56,47,47,44,-17,47,47,-16,44,-25,56,47,-28,-24,-27,47,47,47,47,47,47,-35,-26,-39,-40,-41,-49,47,]),'SUB':([30,31,32,33,35,36,38,39,40,41,42,43,60,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[45,48,-38,-36,-42,-45,48,-38,48,48,45,-17,48,48,-16,45,-25,-38,48,-28,-24,-27,48,48,48,48,48,48,-35,-26,-39,-40,-41,-49,48,]),'SEMICOLON':([30,31,32,33,35,36,39,43,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[-37,46,-38,-36,-42,-45,-38,67,-46,90,91,-16,-37,-25,-38,-48,-28,-24,-27,-29,-30,-31,-32,-33,-34,-35,-26,-39,-40,-41,-49,-47,]),'MOREQ':([30,31,32,33,35,36,38,39,40,41,42,43,60,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[-37,49,-38,-36,-42,-45,49,-38,49,49,-37,-17,49,49,-16,-37,-25,-38,49,-28,-24,-27,49,49,49,49,49,49,-35,-26,-39,-40,-41,-49,49,]),'LESEQ':([30,31,32,33,35,36,38,39,40,41,42,43,60,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[-37,50,-38,-36,-42,-45,50,-38,50,50,-37,-17,50,50,-16,-37,-25,-38,50,-28,-24,-27,50,50,50,50,50,50,-35,-26,-39,-40,-41,-49,50,]),'LT':([30,31,32,33,35,36,38,39,40,41,42,43,60,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[-37,51,-38,-36,-42,-45,51,-38,51,51,-37,-17,51,51,-16,-37,-25,-38,51,-28,-24,-27,51,51,51,51,51,51,-35,-26,-39,-40,-41,-49,51,]),'GT':([30,31,32,33,35,36,38,39,40,41,42,43,60,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[-37,52,-38,-36,-42,-45,52,-38,52,52,-37,-17,52,52,-16,-37,-25,-38,52,-28,-24,-27,52,52,52,52,52,52,-35,-26,-39,-40,-41,-49,52,]),'EQ':([30,31,32,33,35,36,38,39,40,41,42,43,60,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[-37,53,-38,-36,-42,-45,53,-38,53,53,-37,-17,53,53,-16,-37,-25,-38,53,-28,-24,-27,53,53,53,53,53,53,-35,-26,-39,-40,-41,-49,53,]),'NE':([30,31,32,33,35,36,38,39,40,41,42,43,60,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[-37,54,-38,-36,-42,-45,54,-38,54,54,-37,-17,54,54,-16,-37,-25,-38,54,-28,-24,-27,54,54,54,54,54,54,-35,-26,-39,-40,-41,-49,54,]),'DIS':([30,31,32,33,35,36,38,39,40,41,42,43,60,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[-37,55,-38,-36,-42,-45,55,-38,55,55,-37,-17,55,55,-16,-37,-25,-38,55,-28,-24,-27,55,55,55,55,55,55,-35,-26,-39,-40,-41,-49,55,]),'POW':([30,31,32,33,35,36,38,39,40,41,42,43,60,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[-37,-48,-38,-36,61,-45,-48,-38,-48,-48,-37,-17,-48,-46,-16,-37,-25,-38,-48,-28,-24,-27,-29,-30,-31,-32,-33,-34,-35,-26,61,61,61,-49,-47,]),'MULT':([30,31,32,33,35,36,38,39,40,41,42,43,60,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[-37,-48,-38,57,-42,-45,-48,-38,-48,-48,-37,-17,-48,-46,-16,-37,57,-38,-48,57,57,57,-29,-30,-31,-32,-33,-34,57,57,-39,-40,-41,-49,-47,]),'CON':([30,31,32,33,35,36,38,39,40,41,42,43,60,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[-37,-48,-38,58,-42,-45,-48,-38,-48,-48,-37,-17,-48,-46,-16,-37,58,-38,-48,58,58,58,-29,-30,-31,-32,-33,-34,58,58,-39,-40,-41,-49,-47,]),'DIV':([30,31,32,33,35,36,38,39,40,41,42,43,60,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[-37,-48,-38,59,-42,-45,-48,-38,-48,-48,-37,-17,-48,-46,-16,-37,59,-38,-48,59,59,59,-29,-30,-31,-32,-33,-34,59,59,-39,-40,-41,-49,-47,]),'ELSE':([94,],[97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'progbody':([0,],[2,]),'func':([2,],[3,]),'args':([6,24,],[8,29,]),'funcbody':([11,88,89,98,],[13,92,93,99,]),'if':([13,92,93,99,],[16,16,16,16,]),'funcall':([13,25,26,27,28,34,37,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,61,92,93,99,],[17,32,39,39,39,39,39,70,70,70,70,39,39,39,39,39,39,70,70,39,39,39,39,17,17,17,]),'assign':([13,92,93,99,],[18,18,18,18,]),'while':([13,92,93,99,],[19,19,19,19,]),'return':([13,92,93,99,],[20,20,20,20,]),'expression':([25,26,27,28,34,37,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,61,],[31,38,40,41,60,62,71,71,71,71,75,76,77,78,79,80,71,71,71,71,71,87,]),'term':([25,26,27,28,34,37,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,61,],[33,33,33,33,33,33,69,72,73,74,33,33,33,33,33,33,81,82,33,33,33,33,]),'factor':([25,26,27,28,34,37,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,61,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,83,84,85,35,]),'elsebranch':([94,],[96,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> progbody func','program',2,'p_program','parse.py',29),
  ('progbody -> <empty>','progbody',0,'p_progbody','parse.py',34),
  ('progbody -> progbody func','progbody',2,'p_progbody','parse.py',35),
  ('func -> DEF ID LBR args RBR LFBR funcbody RFBR','func',8,'p_func','parse.py',43),
  ('args -> <empty>','args',0,'p_args','parse.py',48),
  ('args -> ID','args',1,'p_args','parse.py',49),
  ('args -> args COMMA ID','args',3,'p_args','parse.py',50),
  ('funcbody -> <empty>','funcbody',0,'p_funcbody','parse.py',60),
  ('funcbody -> funcbody if','funcbody',2,'p_funcbody','parse.py',61),
  ('funcbody -> funcbody funcall','funcbody',2,'p_funcbody','parse.py',62),
  ('funcbody -> funcbody assign','funcbody',2,'p_funcbody','parse.py',63),
  ('funcbody -> funcbody while','funcbody',2,'p_funcbody','parse.py',64),
  ('funcbody -> funcbody return','funcbody',2,'p_funcbody','parse.py',65),
  ('assign -> ID ASSIGN expression SEMICOLON','assign',4,'p_assign','parse.py',73),
  ('assign -> ID ASSIGN funcall','assign',3,'p_assign','parse.py',74),
  ('funcall -> ID LBR args RBR SEMICOLON','funcall',5,'p_funcall','parse.py',79),
  ('funcall -> ID LBR args RBR','funcall',4,'p_funcall','parse.py',80),
  ('if -> IF LBR expression RBR LFBR funcbody RFBR elsebranch','if',8,'p_if','parse.py',85),
  ('elsebranch -> <empty>','elsebranch',0,'p_elsebranch','parse.py',93),
  ('elsebranch -> ELSE LFBR funcbody RFBR','elsebranch',4,'p_elsebranch','parse.py',94),
  ('while -> WHILE LBR expression RBR LFBR funcbody RFBR','while',7,'p_while','parse.py',99),
  ('return -> RETURN LBR expression RBR SEMICOLON','return',5,'p_return','parse.py',105),
  ('return -> RETURN LBR ID RBR SEMICOLON','return',5,'p_return','parse.py',106),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','parse.py',111),
  ('expression -> ID PLUS term','expression',3,'p_expression_plus','parse.py',112),
  ('expression -> funcall PLUS term','expression',3,'p_expression_plus','parse.py',113),
  ('expression -> expression SUB term','expression',3,'p_expression_sub','parse.py',118),
  ('expression -> ID SUB term','expression',3,'p_expression_sub','parse.py',119),
  ('expression -> expression MOREQ expression','expression',3,'p_expression_compar','parse.py',124),
  ('expression -> expression LESEQ expression','expression',3,'p_expression_compar','parse.py',125),
  ('expression -> expression LT expression','expression',3,'p_expression_compar','parse.py',126),
  ('expression -> expression GT expression','expression',3,'p_expression_compar','parse.py',127),
  ('expression -> expression EQ expression','expression',3,'p_expression_compar','parse.py',128),
  ('expression -> expression NE expression','expression',3,'p_expression_compar','parse.py',129),
  ('expression -> expression DIS term','expression',3,'p_expression_bin','parse.py',134),
  ('expression -> term','expression',1,'p_expression_term','parse.py',139),
  ('expression -> ID','expression',1,'p_expression_term','parse.py',140),
  ('expression -> funcall','expression',1,'p_expression_term','parse.py',141),
  ('term -> term MULT factor','term',3,'p_term_times','parse.py',146),
  ('term -> term CON factor','term',3,'p_term_bin','parse.py',151),
  ('term -> term DIV factor','term',3,'p_term_div','parse.py',156),
  ('term -> factor','term',1,'p_term_factor','parse.py',161),
  ('term -> ID','term',1,'p_term_factor','parse.py',162),
  ('term -> funcall','term',1,'p_term_factor','parse.py',163),
  ('factor -> NUM','factor',1,'p_factor_num','parse.py',167),
  ('factor -> DEN expression','factor',2,'p_factor_bin','parse.py',171),
  ('factor -> factor POW expression','factor',3,'p_factor_pow','parse.py',175),
  ('factor -> expression','factor',1,'p_factor_expr','parse.py',180),
  ('factor -> LBR expression RBR','factor',3,'p_factor_expr','parse.py',181),
]
