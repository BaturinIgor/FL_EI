
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSERT BREAK CLASS CON CONTINUE DEF DEL DIS DIV ELIF ELSE EQL EXCEPT FALSE FINALLY FOR FROM GLOBAL ID IF IMPORT IN IS LAMBDA LBR LESS LOE MOE MORE MULT NEG NONE NONLOCAL NOT NUM OR PASS PLUS POW RAISE RBR RETURN SUB TRUE TRY WHILE WITH YIELDexpression : expression PLUS termexpression : expression SUB termexpression : termterm : term MULT factorterm : term DIV factorterm : factorfactor : NUMterm : term POW factorfactor : LBR expression RBR'
    
_lr_action_items = {'NUM':([0,5,6,7,8,9,10,],[4,4,4,4,4,4,4,]),'LBR':([0,5,6,7,8,9,10,],[5,5,5,5,5,5,5,]),'$end':([1,2,3,4,12,13,14,15,16,17,],[0,-3,-6,-7,-1,-2,-4,-5,-8,-9,]),'PLUS':([1,2,3,4,11,12,13,14,15,16,17,],[6,-3,-6,-7,6,-1,-2,-4,-5,-8,-9,]),'SUB':([1,2,3,4,11,12,13,14,15,16,17,],[7,-3,-6,-7,7,-1,-2,-4,-5,-8,-9,]),'RBR':([2,3,4,11,12,13,14,15,16,17,],[-3,-6,-7,17,-1,-2,-4,-5,-8,-9,]),'MULT':([2,3,4,12,13,14,15,16,17,],[8,-6,-7,8,8,-4,-5,-8,-9,]),'DIV':([2,3,4,12,13,14,15,16,17,],[9,-6,-7,9,9,-4,-5,-8,-9,]),'POW':([2,3,4,12,13,14,15,16,17,],[10,-6,-7,10,10,-4,-5,-8,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,5,],[1,11,]),'term':([0,5,6,7,],[2,2,12,13,]),'factor':([0,5,6,7,8,9,10,],[3,3,3,3,14,15,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','parse.py',6),
  ('expression -> expression SUB term','expression',3,'p_expression_minus','parse.py',10),
  ('expression -> term','expression',1,'p_expression_term','parse.py',14),
  ('term -> term MULT factor','term',3,'p_term_times','parse.py',18),
  ('term -> term DIV factor','term',3,'p_term_div','parse.py',22),
  ('term -> factor','term',1,'p_term_factor','parse.py',26),
  ('factor -> NUM','factor',1,'p_factor_num','parse.py',30),
  ('term -> term POW factor','term',3,'p_term_pow','parse.py',34),
  ('factor -> LBR expression RBR','factor',3,'p_factor_expr','parse.py',38),
]
