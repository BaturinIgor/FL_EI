
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN COMMA COMPAR CON DEF DEN DIS DIV ELSE EQ GT ID IF LBR LESEQ LFBR LT MOREQ MULT NE NUM PLUS POW RBR RETURN RFBR SEMICOLON SUB WHILEprogram : progbody funcprogbody :\n                | progbody funcfunc : DEF ID LBR args RBR LFBR funcbody RFBRargs :\n            | expression\n            | args COMMA expressionfuncbody :\n                | funcbody if\n                | funcbody funcall\n                | funcbody assign\n                | funcbody while\n                | funcbody returnassign : ID ASSIGN expression SEMICOLONfuncall : ID LBR args RBR SEMICOLONfuncvar : ID LBR args RBRif : IF LBR expression RBR LFBR funcbody RFBR elsebranchelsebranch :\n                  | ELSE LFBR funcbody RFBRwhile : WHILE LBR expression RBR LFBR funcbody RFBRreturn : RETURN LBR expression RBR SEMICOLON\n              | RETURN LBR ID RBR SEMICOLON expression : expression PLUS termexpression : expression SUB termexpression : expression MOREQ expression\n                  | expression LESEQ expression\n                  | expression LT expression\n                  | expression GT expression\n                  | expression EQ expression\n                  | expression NE expressionexpression : expression DIS termexpression : termterm : term MULT factorterm : term CON factorterm : term DIV factorterm : factorfactor : NUM\n              | funcvar\n              | IDfactor : DEN expressionfactor : factor POW expressionfactor : LBR expression RBR'
    
_lr_action_items = {'DEF':([0,2,3,54,],[-2,4,-3,-4,]),'$end':([1,3,54,],[0,-1,-4,]),'ID':([4,6,8,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,52,55,56,57,58,59,63,64,65,66,67,75,80,81,82,83,84,85,86,87,88,89,91,92,93,],[5,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-8,53,-9,-10,-11,-12,-13,7,7,7,7,73,-14,-15,-8,-8,-21,-22,53,53,-18,-20,-17,-8,53,-19,]),'LBR':([5,6,7,8,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,53,60,61,62,63,64,65,66,67,73,],[6,8,16,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,63,65,66,67,8,8,8,8,8,16,]),'RBR':([6,7,9,10,11,12,13,14,16,17,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,63,68,70,71,72,73,],[-5,-39,18,-6,-32,-36,-37,-38,-5,35,-40,51,-42,-7,-23,-24,-25,-26,-27,-28,-29,-30,-31,-33,-34,-35,-41,-16,-5,74,76,77,78,79,]),'COMMA':([6,7,9,10,11,12,13,14,16,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,63,68,],[-5,-39,19,-6,-32,-36,-37,-38,-5,-40,19,-42,-7,-23,-24,-25,-26,-27,-28,-29,-30,-31,-33,-34,-35,-41,-16,-5,19,]),'NUM':([6,8,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,63,64,65,66,67,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'DEN':([6,8,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,63,64,65,66,67,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'POW':([7,11,12,13,14,33,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,73,],[-39,-32,32,-37,-38,-40,-42,-23,-24,-25,-26,-27,-28,-29,-30,-31,32,32,32,-41,-16,-39,]),'MULT':([7,11,12,13,14,33,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,73,],[-39,29,-36,-37,-38,-40,-42,29,29,-25,-26,-27,-28,-29,-30,29,-33,-34,-35,-41,-16,-39,]),'CON':([7,11,12,13,14,33,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,73,],[-39,30,-36,-37,-38,-40,-42,30,30,-25,-26,-27,-28,-29,-30,30,-33,-34,-35,-41,-16,-39,]),'DIV':([7,11,12,13,14,33,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,73,],[-39,31,-36,-37,-38,-40,-42,31,31,-25,-26,-27,-28,-29,-30,31,-33,-34,-35,-41,-16,-39,]),'PLUS':([7,10,11,12,13,14,17,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,69,70,71,72,73,],[-39,20,-32,-36,-37,-38,20,20,-42,20,-23,-24,20,20,20,20,20,20,-31,-33,-34,-35,20,-16,20,20,20,20,-39,]),'SUB':([7,10,11,12,13,14,17,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,69,70,71,72,73,],[-39,21,-32,-36,-37,-38,21,21,-42,21,-23,-24,21,21,21,21,21,21,-31,-33,-34,-35,21,-16,21,21,21,21,-39,]),'MOREQ':([7,10,11,12,13,14,17,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,69,70,71,72,73,],[-39,22,-32,-36,-37,-38,22,22,-42,22,-23,-24,22,22,22,22,22,22,-31,-33,-34,-35,22,-16,22,22,22,22,-39,]),'LESEQ':([7,10,11,12,13,14,17,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,69,70,71,72,73,],[-39,23,-32,-36,-37,-38,23,23,-42,23,-23,-24,23,23,23,23,23,23,-31,-33,-34,-35,23,-16,23,23,23,23,-39,]),'LT':([7,10,11,12,13,14,17,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,69,70,71,72,73,],[-39,24,-32,-36,-37,-38,24,24,-42,24,-23,-24,24,24,24,24,24,24,-31,-33,-34,-35,24,-16,24,24,24,24,-39,]),'GT':([7,10,11,12,13,14,17,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,69,70,71,72,73,],[-39,25,-32,-36,-37,-38,25,25,-42,25,-23,-24,25,25,25,25,25,25,-31,-33,-34,-35,25,-16,25,25,25,25,-39,]),'EQ':([7,10,11,12,13,14,17,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,69,70,71,72,73,],[-39,26,-32,-36,-37,-38,26,26,-42,26,-23,-24,26,26,26,26,26,26,-31,-33,-34,-35,26,-16,26,26,26,26,-39,]),'NE':([7,10,11,12,13,14,17,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,69,70,71,72,73,],[-39,27,-32,-36,-37,-38,27,27,-42,27,-23,-24,27,27,27,27,27,27,-31,-33,-34,-35,27,-16,27,27,27,27,-39,]),'DIS':([7,10,11,12,13,14,17,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,69,70,71,72,73,],[-39,28,-32,-36,-37,-38,28,28,-42,28,-23,-24,28,28,28,28,28,28,-31,-33,-34,-35,28,-16,28,28,28,28,-39,]),'SEMICOLON':([7,11,12,13,14,33,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,69,74,78,79,],[-39,-32,-36,-37,-38,-40,-42,-23,-24,-25,-26,-27,-28,-29,-30,-31,-33,-34,-35,-41,-16,75,80,83,84,]),'LFBR':([18,76,77,90,],[36,81,82,91,]),'RFBR':([36,52,55,56,57,58,59,75,80,81,82,83,84,85,86,87,88,89,91,92,93,],[-8,54,-9,-10,-11,-12,-13,-14,-15,-8,-8,-21,-22,87,88,-18,-20,-17,-8,93,-19,]),'IF':([36,52,55,56,57,58,59,75,80,81,82,83,84,85,86,87,88,89,91,92,93,],[-8,60,-9,-10,-11,-12,-13,-14,-15,-8,-8,-21,-22,60,60,-18,-20,-17,-8,60,-19,]),'WHILE':([36,52,55,56,57,58,59,75,80,81,82,83,84,85,86,87,88,89,91,92,93,],[-8,61,-9,-10,-11,-12,-13,-14,-15,-8,-8,-21,-22,61,61,-18,-20,-17,-8,61,-19,]),'RETURN':([36,52,55,56,57,58,59,75,80,81,82,83,84,85,86,87,88,89,91,92,93,],[-8,62,-9,-10,-11,-12,-13,-14,-15,-8,-8,-21,-22,62,62,-18,-20,-17,-8,62,-19,]),'ASSIGN':([53,],[64,]),'ELSE':([87,],[90,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'progbody':([0,],[2,]),'func':([2,],[3,]),'args':([6,16,63,],[9,34,68,]),'expression':([6,8,15,16,19,22,23,24,25,26,27,32,63,64,65,66,67,],[10,17,33,10,37,40,41,42,43,44,45,50,10,69,70,71,72,]),'term':([6,8,15,16,19,20,21,22,23,24,25,26,27,28,32,63,64,65,66,67,],[11,11,11,11,11,38,39,11,11,11,11,11,11,46,11,11,11,11,11,11,]),'factor':([6,8,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,63,64,65,66,67,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,47,48,49,12,12,12,12,12,12,]),'funcvar':([6,8,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,63,64,65,66,67,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'funcbody':([36,81,82,91,],[52,85,86,92,]),'if':([52,85,86,92,],[55,55,55,55,]),'funcall':([52,85,86,92,],[56,56,56,56,]),'assign':([52,85,86,92,],[57,57,57,57,]),'while':([52,85,86,92,],[58,58,58,58,]),'return':([52,85,86,92,],[59,59,59,59,]),'elsebranch':([87,],[89,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> progbody func','program',2,'p_program','parse.py',30),
  ('progbody -> <empty>','progbody',0,'p_progbody','parse.py',35),
  ('progbody -> progbody func','progbody',2,'p_progbody','parse.py',36),
  ('func -> DEF ID LBR args RBR LFBR funcbody RFBR','func',8,'p_func','parse.py',44),
  ('args -> <empty>','args',0,'p_args','parse.py',49),
  ('args -> expression','args',1,'p_args','parse.py',50),
  ('args -> args COMMA expression','args',3,'p_args','parse.py',51),
  ('funcbody -> <empty>','funcbody',0,'p_funcbody','parse.py',61),
  ('funcbody -> funcbody if','funcbody',2,'p_funcbody','parse.py',62),
  ('funcbody -> funcbody funcall','funcbody',2,'p_funcbody','parse.py',63),
  ('funcbody -> funcbody assign','funcbody',2,'p_funcbody','parse.py',64),
  ('funcbody -> funcbody while','funcbody',2,'p_funcbody','parse.py',65),
  ('funcbody -> funcbody return','funcbody',2,'p_funcbody','parse.py',66),
  ('assign -> ID ASSIGN expression SEMICOLON','assign',4,'p_assign','parse.py',74),
  ('funcall -> ID LBR args RBR SEMICOLON','funcall',5,'p_funcall','parse.py',79),
  ('funcvar -> ID LBR args RBR','funcvar',4,'p_funcvar','parse.py',83),
  ('if -> IF LBR expression RBR LFBR funcbody RFBR elsebranch','if',8,'p_if','parse.py',87),
  ('elsebranch -> <empty>','elsebranch',0,'p_elsebranch','parse.py',95),
  ('elsebranch -> ELSE LFBR funcbody RFBR','elsebranch',4,'p_elsebranch','parse.py',96),
  ('while -> WHILE LBR expression RBR LFBR funcbody RFBR','while',7,'p_while','parse.py',102),
  ('return -> RETURN LBR expression RBR SEMICOLON','return',5,'p_return','parse.py',108),
  ('return -> RETURN LBR ID RBR SEMICOLON','return',5,'p_return','parse.py',109),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','parse.py',114),
  ('expression -> expression SUB term','expression',3,'p_expression_sub','parse.py',119),
  ('expression -> expression MOREQ expression','expression',3,'p_expression_compar','parse.py',124),
  ('expression -> expression LESEQ expression','expression',3,'p_expression_compar','parse.py',125),
  ('expression -> expression LT expression','expression',3,'p_expression_compar','parse.py',126),
  ('expression -> expression GT expression','expression',3,'p_expression_compar','parse.py',127),
  ('expression -> expression EQ expression','expression',3,'p_expression_compar','parse.py',128),
  ('expression -> expression NE expression','expression',3,'p_expression_compar','parse.py',129),
  ('expression -> expression DIS term','expression',3,'p_expression_bin','parse.py',134),
  ('expression -> term','expression',1,'p_expression_term','parse.py',139),
  ('term -> term MULT factor','term',3,'p_term_times','parse.py',144),
  ('term -> term CON factor','term',3,'p_term_bin','parse.py',149),
  ('term -> term DIV factor','term',3,'p_term_div','parse.py',154),
  ('term -> factor','term',1,'p_term_factor','parse.py',159),
  ('factor -> NUM','factor',1,'p_factor_num','parse.py',164),
  ('factor -> funcvar','factor',1,'p_factor_num','parse.py',165),
  ('factor -> ID','factor',1,'p_factor_num','parse.py',166),
  ('factor -> DEN expression','factor',2,'p_factor_bin','parse.py',171),
  ('factor -> factor POW expression','factor',3,'p_factor_pow','parse.py',176),
  ('factor -> LBR expression RBR','factor',3,'p_factor_expr','parse.py',181),
]
