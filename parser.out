Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMPAR

Grammar

Rule 0     S' -> program
Rule 1     program -> progbody func
Rule 2     progbody -> <empty>
Rule 3     progbody -> progbody func
Rule 4     func -> DEF ID LBR args RBR LFBR funcbody RFBR
Rule 5     args -> <empty>
Rule 6     args -> expression
Rule 7     args -> args COMMA expression
Rule 8     funcbody -> <empty>
Rule 9     funcbody -> funcbody if
Rule 10    funcbody -> funcbody funcall
Rule 11    funcbody -> funcbody assign
Rule 12    funcbody -> funcbody while
Rule 13    funcbody -> funcbody return
Rule 14    assign -> ID ASSIGN expression SEMICOLON
Rule 15    funcall -> ID LBR args RBR SEMICOLON
Rule 16    funcvar -> ID LBR args RBR
Rule 17    if -> IF LBR expression RBR LFBR funcbody RFBR elsebranch
Rule 18    elsebranch -> <empty>
Rule 19    elsebranch -> ELSE LFBR funcbody RFBR
Rule 20    while -> WHILE LBR expression RBR LFBR funcbody RFBR
Rule 21    return -> RETURN LBR expression RBR SEMICOLON
Rule 22    return -> RETURN LBR ID RBR SEMICOLON
Rule 23    expression -> expression PLUS term
Rule 24    expression -> expression SUB term
Rule 25    expression -> expression MOREQ expression
Rule 26    expression -> expression LESEQ expression
Rule 27    expression -> expression LT expression
Rule 28    expression -> expression GT expression
Rule 29    expression -> expression EQ expression
Rule 30    expression -> expression NE expression
Rule 31    expression -> expression DIS term
Rule 32    expression -> term
Rule 33    term -> term MULT factor
Rule 34    term -> term CON factor
Rule 35    term -> term DIV factor
Rule 36    term -> factor
Rule 37    factor -> NUM
Rule 38    factor -> funcvar
Rule 39    factor -> ID
Rule 40    factor -> DEN expression
Rule 41    factor -> factor POW expression
Rule 42    factor -> LBR expression RBR

Terminals, with rules where they appear

ASSIGN               : 14
COMMA                : 7
COMPAR               : 
CON                  : 34
DEF                  : 4
DEN                  : 40
DIS                  : 31
DIV                  : 35
ELSE                 : 19
EQ                   : 29
GT                   : 28
ID                   : 4 14 15 16 22 39
IF                   : 17
LBR                  : 4 15 16 17 20 21 22 42
LESEQ                : 26
LFBR                 : 4 17 19 20
LT                   : 27
MOREQ                : 25
MULT                 : 33
NE                   : 30
NUM                  : 37
PLUS                 : 23
POW                  : 41
RBR                  : 4 15 16 17 20 21 22 42
RETURN               : 21 22
RFBR                 : 4 17 19 20
SEMICOLON            : 14 15 21 22
SUB                  : 24
WHILE                : 20
error                : 

Nonterminals, with rules where they appear

args                 : 4 7 15 16
assign               : 11
elsebranch           : 17
expression           : 6 7 14 17 20 21 23 24 25 25 26 26 27 27 28 28 29 29 30 30 31 40 41 42
factor               : 33 34 35 36 41
func                 : 1 3
funcall              : 10
funcbody             : 4 9 10 11 12 13 17 19 20
funcvar              : 38
if                   : 9
progbody             : 1 3
program              : 0
return               : 13
term                 : 23 24 31 32 33 34 35
while                : 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . progbody func
    (2) progbody -> .
    (3) progbody -> . progbody func

    DEF             reduce using rule 2 (progbody -> .)

    program                        shift and go to state 1
    progbody                       shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> progbody . func
    (3) progbody -> progbody . func
    (4) func -> . DEF ID LBR args RBR LFBR funcbody RFBR

    DEF             shift and go to state 4

    func                           shift and go to state 3

state 3

    (1) program -> progbody func .
    (3) progbody -> progbody func .

    $end            reduce using rule 1 (program -> progbody func .)
    DEF             reduce using rule 3 (progbody -> progbody func .)


state 4

    (4) func -> DEF . ID LBR args RBR LFBR funcbody RFBR

    ID              shift and go to state 5


state 5

    (4) func -> DEF ID . LBR args RBR LFBR funcbody RFBR

    LBR             shift and go to state 6


state 6

    (4) func -> DEF ID LBR . args RBR LFBR funcbody RFBR
    (5) args -> .
    (6) args -> . expression
    (7) args -> . args COMMA expression
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    RBR             reduce using rule 5 (args -> .)
    COMMA           reduce using rule 5 (args -> .)
    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    args                           shift and go to state 9
    expression                     shift and go to state 10
    term                           shift and go to state 11
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 7

    (39) factor -> ID .
    (16) funcvar -> ID . LBR args RBR

    POW             reduce using rule 39 (factor -> ID .)
    MULT            reduce using rule 39 (factor -> ID .)
    CON             reduce using rule 39 (factor -> ID .)
    DIV             reduce using rule 39 (factor -> ID .)
    PLUS            reduce using rule 39 (factor -> ID .)
    SUB             reduce using rule 39 (factor -> ID .)
    MOREQ           reduce using rule 39 (factor -> ID .)
    LESEQ           reduce using rule 39 (factor -> ID .)
    LT              reduce using rule 39 (factor -> ID .)
    GT              reduce using rule 39 (factor -> ID .)
    EQ              reduce using rule 39 (factor -> ID .)
    NE              reduce using rule 39 (factor -> ID .)
    DIS             reduce using rule 39 (factor -> ID .)
    RBR             reduce using rule 39 (factor -> ID .)
    COMMA           reduce using rule 39 (factor -> ID .)
    SEMICOLON       reduce using rule 39 (factor -> ID .)
    LBR             shift and go to state 16


state 8

    (42) factor -> LBR . expression RBR
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    expression                     shift and go to state 17
    term                           shift and go to state 11
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 9

    (4) func -> DEF ID LBR args . RBR LFBR funcbody RFBR
    (7) args -> args . COMMA expression

    RBR             shift and go to state 18
    COMMA           shift and go to state 19


state 10

    (6) args -> expression .
    (23) expression -> expression . PLUS term
    (24) expression -> expression . SUB term
    (25) expression -> expression . MOREQ expression
    (26) expression -> expression . LESEQ expression
    (27) expression -> expression . LT expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NE expression
    (31) expression -> expression . DIS term

    RBR             reduce using rule 6 (args -> expression .)
    COMMA           reduce using rule 6 (args -> expression .)
    PLUS            shift and go to state 20
    SUB             shift and go to state 21
    MOREQ           shift and go to state 22
    LESEQ           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25
    EQ              shift and go to state 26
    NE              shift and go to state 27
    DIS             shift and go to state 28


state 11

    (32) expression -> term .
    (33) term -> term . MULT factor
    (34) term -> term . CON factor
    (35) term -> term . DIV factor

  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for CON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    PLUS            reduce using rule 32 (expression -> term .)
    SUB             reduce using rule 32 (expression -> term .)
    MOREQ           reduce using rule 32 (expression -> term .)
    LESEQ           reduce using rule 32 (expression -> term .)
    LT              reduce using rule 32 (expression -> term .)
    GT              reduce using rule 32 (expression -> term .)
    EQ              reduce using rule 32 (expression -> term .)
    NE              reduce using rule 32 (expression -> term .)
    DIS             reduce using rule 32 (expression -> term .)
    RBR             reduce using rule 32 (expression -> term .)
    COMMA           reduce using rule 32 (expression -> term .)
    POW             reduce using rule 32 (expression -> term .)
    SEMICOLON       reduce using rule 32 (expression -> term .)
    MULT            shift and go to state 29
    CON             shift and go to state 30
    DIV             shift and go to state 31

  ! MULT            [ reduce using rule 32 (expression -> term .) ]
  ! CON             [ reduce using rule 32 (expression -> term .) ]
  ! DIV             [ reduce using rule 32 (expression -> term .) ]


state 12

    (36) term -> factor .
    (41) factor -> factor . POW expression

  ! shift/reduce conflict for POW resolved as shift
    MULT            reduce using rule 36 (term -> factor .)
    CON             reduce using rule 36 (term -> factor .)
    DIV             reduce using rule 36 (term -> factor .)
    PLUS            reduce using rule 36 (term -> factor .)
    SUB             reduce using rule 36 (term -> factor .)
    MOREQ           reduce using rule 36 (term -> factor .)
    LESEQ           reduce using rule 36 (term -> factor .)
    LT              reduce using rule 36 (term -> factor .)
    GT              reduce using rule 36 (term -> factor .)
    EQ              reduce using rule 36 (term -> factor .)
    NE              reduce using rule 36 (term -> factor .)
    DIS             reduce using rule 36 (term -> factor .)
    RBR             reduce using rule 36 (term -> factor .)
    COMMA           reduce using rule 36 (term -> factor .)
    SEMICOLON       reduce using rule 36 (term -> factor .)
    POW             shift and go to state 32

  ! POW             [ reduce using rule 36 (term -> factor .) ]


state 13

    (37) factor -> NUM .

    POW             reduce using rule 37 (factor -> NUM .)
    MULT            reduce using rule 37 (factor -> NUM .)
    CON             reduce using rule 37 (factor -> NUM .)
    DIV             reduce using rule 37 (factor -> NUM .)
    PLUS            reduce using rule 37 (factor -> NUM .)
    SUB             reduce using rule 37 (factor -> NUM .)
    MOREQ           reduce using rule 37 (factor -> NUM .)
    LESEQ           reduce using rule 37 (factor -> NUM .)
    LT              reduce using rule 37 (factor -> NUM .)
    GT              reduce using rule 37 (factor -> NUM .)
    EQ              reduce using rule 37 (factor -> NUM .)
    NE              reduce using rule 37 (factor -> NUM .)
    DIS             reduce using rule 37 (factor -> NUM .)
    RBR             reduce using rule 37 (factor -> NUM .)
    COMMA           reduce using rule 37 (factor -> NUM .)
    SEMICOLON       reduce using rule 37 (factor -> NUM .)


state 14

    (38) factor -> funcvar .

    POW             reduce using rule 38 (factor -> funcvar .)
    MULT            reduce using rule 38 (factor -> funcvar .)
    CON             reduce using rule 38 (factor -> funcvar .)
    DIV             reduce using rule 38 (factor -> funcvar .)
    PLUS            reduce using rule 38 (factor -> funcvar .)
    SUB             reduce using rule 38 (factor -> funcvar .)
    MOREQ           reduce using rule 38 (factor -> funcvar .)
    LESEQ           reduce using rule 38 (factor -> funcvar .)
    LT              reduce using rule 38 (factor -> funcvar .)
    GT              reduce using rule 38 (factor -> funcvar .)
    EQ              reduce using rule 38 (factor -> funcvar .)
    NE              reduce using rule 38 (factor -> funcvar .)
    DIS             reduce using rule 38 (factor -> funcvar .)
    RBR             reduce using rule 38 (factor -> funcvar .)
    COMMA           reduce using rule 38 (factor -> funcvar .)
    SEMICOLON       reduce using rule 38 (factor -> funcvar .)


state 15

    (40) factor -> DEN . expression
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    expression                     shift and go to state 33
    term                           shift and go to state 11
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 16

    (16) funcvar -> ID LBR . args RBR
    (5) args -> .
    (6) args -> . expression
    (7) args -> . args COMMA expression
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    RBR             reduce using rule 5 (args -> .)
    COMMA           reduce using rule 5 (args -> .)
    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    args                           shift and go to state 34
    expression                     shift and go to state 10
    term                           shift and go to state 11
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 17

    (42) factor -> LBR expression . RBR
    (23) expression -> expression . PLUS term
    (24) expression -> expression . SUB term
    (25) expression -> expression . MOREQ expression
    (26) expression -> expression . LESEQ expression
    (27) expression -> expression . LT expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NE expression
    (31) expression -> expression . DIS term

    RBR             shift and go to state 35
    PLUS            shift and go to state 20
    SUB             shift and go to state 21
    MOREQ           shift and go to state 22
    LESEQ           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25
    EQ              shift and go to state 26
    NE              shift and go to state 27
    DIS             shift and go to state 28


state 18

    (4) func -> DEF ID LBR args RBR . LFBR funcbody RFBR

    LFBR            shift and go to state 36


state 19

    (7) args -> args COMMA . expression
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    expression                     shift and go to state 37
    term                           shift and go to state 11
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 20

    (23) expression -> expression PLUS . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    term                           shift and go to state 38
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 21

    (24) expression -> expression SUB . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    term                           shift and go to state 39
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 22

    (25) expression -> expression MOREQ . expression
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    expression                     shift and go to state 40
    term                           shift and go to state 11
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 23

    (26) expression -> expression LESEQ . expression
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    expression                     shift and go to state 41
    term                           shift and go to state 11
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 24

    (27) expression -> expression LT . expression
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    expression                     shift and go to state 42
    term                           shift and go to state 11
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 25

    (28) expression -> expression GT . expression
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    expression                     shift and go to state 43
    term                           shift and go to state 11
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 26

    (29) expression -> expression EQ . expression
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    expression                     shift and go to state 44
    term                           shift and go to state 11
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 27

    (30) expression -> expression NE . expression
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    expression                     shift and go to state 45
    term                           shift and go to state 11
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 28

    (31) expression -> expression DIS . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    term                           shift and go to state 46
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 29

    (33) term -> term MULT . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    factor                         shift and go to state 47
    funcvar                        shift and go to state 14

state 30

    (34) term -> term CON . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    factor                         shift and go to state 48
    funcvar                        shift and go to state 14

state 31

    (35) term -> term DIV . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    factor                         shift and go to state 49
    funcvar                        shift and go to state 14

state 32

    (41) factor -> factor POW . expression
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    factor                         shift and go to state 12
    expression                     shift and go to state 50
    term                           shift and go to state 11
    funcvar                        shift and go to state 14

state 33

    (40) factor -> DEN expression .
    (23) expression -> expression . PLUS term
    (24) expression -> expression . SUB term
    (25) expression -> expression . MOREQ expression
    (26) expression -> expression . LESEQ expression
    (27) expression -> expression . LT expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NE expression
    (31) expression -> expression . DIS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MOREQ resolved as shift
  ! shift/reduce conflict for LESEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for DIS resolved as shift
    POW             reduce using rule 40 (factor -> DEN expression .)
    MULT            reduce using rule 40 (factor -> DEN expression .)
    CON             reduce using rule 40 (factor -> DEN expression .)
    DIV             reduce using rule 40 (factor -> DEN expression .)
    RBR             reduce using rule 40 (factor -> DEN expression .)
    COMMA           reduce using rule 40 (factor -> DEN expression .)
    SEMICOLON       reduce using rule 40 (factor -> DEN expression .)
    PLUS            shift and go to state 20
    SUB             shift and go to state 21
    MOREQ           shift and go to state 22
    LESEQ           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25
    EQ              shift and go to state 26
    NE              shift and go to state 27
    DIS             shift and go to state 28

  ! PLUS            [ reduce using rule 40 (factor -> DEN expression .) ]
  ! SUB             [ reduce using rule 40 (factor -> DEN expression .) ]
  ! MOREQ           [ reduce using rule 40 (factor -> DEN expression .) ]
  ! LESEQ           [ reduce using rule 40 (factor -> DEN expression .) ]
  ! LT              [ reduce using rule 40 (factor -> DEN expression .) ]
  ! GT              [ reduce using rule 40 (factor -> DEN expression .) ]
  ! EQ              [ reduce using rule 40 (factor -> DEN expression .) ]
  ! NE              [ reduce using rule 40 (factor -> DEN expression .) ]
  ! DIS             [ reduce using rule 40 (factor -> DEN expression .) ]


state 34

    (16) funcvar -> ID LBR args . RBR
    (7) args -> args . COMMA expression

    RBR             shift and go to state 51
    COMMA           shift and go to state 19


state 35

    (42) factor -> LBR expression RBR .

    POW             reduce using rule 42 (factor -> LBR expression RBR .)
    MULT            reduce using rule 42 (factor -> LBR expression RBR .)
    CON             reduce using rule 42 (factor -> LBR expression RBR .)
    DIV             reduce using rule 42 (factor -> LBR expression RBR .)
    PLUS            reduce using rule 42 (factor -> LBR expression RBR .)
    SUB             reduce using rule 42 (factor -> LBR expression RBR .)
    MOREQ           reduce using rule 42 (factor -> LBR expression RBR .)
    LESEQ           reduce using rule 42 (factor -> LBR expression RBR .)
    LT              reduce using rule 42 (factor -> LBR expression RBR .)
    GT              reduce using rule 42 (factor -> LBR expression RBR .)
    EQ              reduce using rule 42 (factor -> LBR expression RBR .)
    NE              reduce using rule 42 (factor -> LBR expression RBR .)
    DIS             reduce using rule 42 (factor -> LBR expression RBR .)
    RBR             reduce using rule 42 (factor -> LBR expression RBR .)
    COMMA           reduce using rule 42 (factor -> LBR expression RBR .)
    SEMICOLON       reduce using rule 42 (factor -> LBR expression RBR .)


state 36

    (4) func -> DEF ID LBR args RBR LFBR . funcbody RFBR
    (8) funcbody -> .
    (9) funcbody -> . funcbody if
    (10) funcbody -> . funcbody funcall
    (11) funcbody -> . funcbody assign
    (12) funcbody -> . funcbody while
    (13) funcbody -> . funcbody return

    RFBR            reduce using rule 8 (funcbody -> .)
    IF              reduce using rule 8 (funcbody -> .)
    ID              reduce using rule 8 (funcbody -> .)
    WHILE           reduce using rule 8 (funcbody -> .)
    RETURN          reduce using rule 8 (funcbody -> .)

    funcbody                       shift and go to state 52

state 37

    (7) args -> args COMMA expression .
    (23) expression -> expression . PLUS term
    (24) expression -> expression . SUB term
    (25) expression -> expression . MOREQ expression
    (26) expression -> expression . LESEQ expression
    (27) expression -> expression . LT expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NE expression
    (31) expression -> expression . DIS term

    RBR             reduce using rule 7 (args -> args COMMA expression .)
    COMMA           reduce using rule 7 (args -> args COMMA expression .)
    PLUS            shift and go to state 20
    SUB             shift and go to state 21
    MOREQ           shift and go to state 22
    LESEQ           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25
    EQ              shift and go to state 26
    NE              shift and go to state 27
    DIS             shift and go to state 28


state 38

    (23) expression -> expression PLUS term .
    (33) term -> term . MULT factor
    (34) term -> term . CON factor
    (35) term -> term . DIV factor

  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for CON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    PLUS            reduce using rule 23 (expression -> expression PLUS term .)
    SUB             reduce using rule 23 (expression -> expression PLUS term .)
    MOREQ           reduce using rule 23 (expression -> expression PLUS term .)
    LESEQ           reduce using rule 23 (expression -> expression PLUS term .)
    LT              reduce using rule 23 (expression -> expression PLUS term .)
    GT              reduce using rule 23 (expression -> expression PLUS term .)
    EQ              reduce using rule 23 (expression -> expression PLUS term .)
    NE              reduce using rule 23 (expression -> expression PLUS term .)
    DIS             reduce using rule 23 (expression -> expression PLUS term .)
    RBR             reduce using rule 23 (expression -> expression PLUS term .)
    COMMA           reduce using rule 23 (expression -> expression PLUS term .)
    POW             reduce using rule 23 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 23 (expression -> expression PLUS term .)
    MULT            shift and go to state 29
    CON             shift and go to state 30
    DIV             shift and go to state 31

  ! MULT            [ reduce using rule 23 (expression -> expression PLUS term .) ]
  ! CON             [ reduce using rule 23 (expression -> expression PLUS term .) ]
  ! DIV             [ reduce using rule 23 (expression -> expression PLUS term .) ]


state 39

    (24) expression -> expression SUB term .
    (33) term -> term . MULT factor
    (34) term -> term . CON factor
    (35) term -> term . DIV factor

  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for CON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    PLUS            reduce using rule 24 (expression -> expression SUB term .)
    SUB             reduce using rule 24 (expression -> expression SUB term .)
    MOREQ           reduce using rule 24 (expression -> expression SUB term .)
    LESEQ           reduce using rule 24 (expression -> expression SUB term .)
    LT              reduce using rule 24 (expression -> expression SUB term .)
    GT              reduce using rule 24 (expression -> expression SUB term .)
    EQ              reduce using rule 24 (expression -> expression SUB term .)
    NE              reduce using rule 24 (expression -> expression SUB term .)
    DIS             reduce using rule 24 (expression -> expression SUB term .)
    RBR             reduce using rule 24 (expression -> expression SUB term .)
    COMMA           reduce using rule 24 (expression -> expression SUB term .)
    POW             reduce using rule 24 (expression -> expression SUB term .)
    SEMICOLON       reduce using rule 24 (expression -> expression SUB term .)
    MULT            shift and go to state 29
    CON             shift and go to state 30
    DIV             shift and go to state 31

  ! MULT            [ reduce using rule 24 (expression -> expression SUB term .) ]
  ! CON             [ reduce using rule 24 (expression -> expression SUB term .) ]
  ! DIV             [ reduce using rule 24 (expression -> expression SUB term .) ]


state 40

    (25) expression -> expression MOREQ expression .
    (23) expression -> expression . PLUS term
    (24) expression -> expression . SUB term
    (25) expression -> expression . MOREQ expression
    (26) expression -> expression . LESEQ expression
    (27) expression -> expression . LT expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NE expression
    (31) expression -> expression . DIS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MOREQ resolved as shift
  ! shift/reduce conflict for LESEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for DIS resolved as shift
    RBR             reduce using rule 25 (expression -> expression MOREQ expression .)
    COMMA           reduce using rule 25 (expression -> expression MOREQ expression .)
    POW             reduce using rule 25 (expression -> expression MOREQ expression .)
    MULT            reduce using rule 25 (expression -> expression MOREQ expression .)
    CON             reduce using rule 25 (expression -> expression MOREQ expression .)
    DIV             reduce using rule 25 (expression -> expression MOREQ expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression MOREQ expression .)
    PLUS            shift and go to state 20
    SUB             shift and go to state 21
    MOREQ           shift and go to state 22
    LESEQ           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25
    EQ              shift and go to state 26
    NE              shift and go to state 27
    DIS             shift and go to state 28

  ! PLUS            [ reduce using rule 25 (expression -> expression MOREQ expression .) ]
  ! SUB             [ reduce using rule 25 (expression -> expression MOREQ expression .) ]
  ! MOREQ           [ reduce using rule 25 (expression -> expression MOREQ expression .) ]
  ! LESEQ           [ reduce using rule 25 (expression -> expression MOREQ expression .) ]
  ! LT              [ reduce using rule 25 (expression -> expression MOREQ expression .) ]
  ! GT              [ reduce using rule 25 (expression -> expression MOREQ expression .) ]
  ! EQ              [ reduce using rule 25 (expression -> expression MOREQ expression .) ]
  ! NE              [ reduce using rule 25 (expression -> expression MOREQ expression .) ]
  ! DIS             [ reduce using rule 25 (expression -> expression MOREQ expression .) ]


state 41

    (26) expression -> expression LESEQ expression .
    (23) expression -> expression . PLUS term
    (24) expression -> expression . SUB term
    (25) expression -> expression . MOREQ expression
    (26) expression -> expression . LESEQ expression
    (27) expression -> expression . LT expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NE expression
    (31) expression -> expression . DIS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MOREQ resolved as shift
  ! shift/reduce conflict for LESEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for DIS resolved as shift
    RBR             reduce using rule 26 (expression -> expression LESEQ expression .)
    COMMA           reduce using rule 26 (expression -> expression LESEQ expression .)
    POW             reduce using rule 26 (expression -> expression LESEQ expression .)
    MULT            reduce using rule 26 (expression -> expression LESEQ expression .)
    CON             reduce using rule 26 (expression -> expression LESEQ expression .)
    DIV             reduce using rule 26 (expression -> expression LESEQ expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression LESEQ expression .)
    PLUS            shift and go to state 20
    SUB             shift and go to state 21
    MOREQ           shift and go to state 22
    LESEQ           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25
    EQ              shift and go to state 26
    NE              shift and go to state 27
    DIS             shift and go to state 28

  ! PLUS            [ reduce using rule 26 (expression -> expression LESEQ expression .) ]
  ! SUB             [ reduce using rule 26 (expression -> expression LESEQ expression .) ]
  ! MOREQ           [ reduce using rule 26 (expression -> expression LESEQ expression .) ]
  ! LESEQ           [ reduce using rule 26 (expression -> expression LESEQ expression .) ]
  ! LT              [ reduce using rule 26 (expression -> expression LESEQ expression .) ]
  ! GT              [ reduce using rule 26 (expression -> expression LESEQ expression .) ]
  ! EQ              [ reduce using rule 26 (expression -> expression LESEQ expression .) ]
  ! NE              [ reduce using rule 26 (expression -> expression LESEQ expression .) ]
  ! DIS             [ reduce using rule 26 (expression -> expression LESEQ expression .) ]


state 42

    (27) expression -> expression LT expression .
    (23) expression -> expression . PLUS term
    (24) expression -> expression . SUB term
    (25) expression -> expression . MOREQ expression
    (26) expression -> expression . LESEQ expression
    (27) expression -> expression . LT expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NE expression
    (31) expression -> expression . DIS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MOREQ resolved as shift
  ! shift/reduce conflict for LESEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for DIS resolved as shift
    RBR             reduce using rule 27 (expression -> expression LT expression .)
    COMMA           reduce using rule 27 (expression -> expression LT expression .)
    POW             reduce using rule 27 (expression -> expression LT expression .)
    MULT            reduce using rule 27 (expression -> expression LT expression .)
    CON             reduce using rule 27 (expression -> expression LT expression .)
    DIV             reduce using rule 27 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression LT expression .)
    PLUS            shift and go to state 20
    SUB             shift and go to state 21
    MOREQ           shift and go to state 22
    LESEQ           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25
    EQ              shift and go to state 26
    NE              shift and go to state 27
    DIS             shift and go to state 28

  ! PLUS            [ reduce using rule 27 (expression -> expression LT expression .) ]
  ! SUB             [ reduce using rule 27 (expression -> expression LT expression .) ]
  ! MOREQ           [ reduce using rule 27 (expression -> expression LT expression .) ]
  ! LESEQ           [ reduce using rule 27 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 27 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 27 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 27 (expression -> expression LT expression .) ]
  ! NE              [ reduce using rule 27 (expression -> expression LT expression .) ]
  ! DIS             [ reduce using rule 27 (expression -> expression LT expression .) ]


state 43

    (28) expression -> expression GT expression .
    (23) expression -> expression . PLUS term
    (24) expression -> expression . SUB term
    (25) expression -> expression . MOREQ expression
    (26) expression -> expression . LESEQ expression
    (27) expression -> expression . LT expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NE expression
    (31) expression -> expression . DIS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MOREQ resolved as shift
  ! shift/reduce conflict for LESEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for DIS resolved as shift
    RBR             reduce using rule 28 (expression -> expression GT expression .)
    COMMA           reduce using rule 28 (expression -> expression GT expression .)
    POW             reduce using rule 28 (expression -> expression GT expression .)
    MULT            reduce using rule 28 (expression -> expression GT expression .)
    CON             reduce using rule 28 (expression -> expression GT expression .)
    DIV             reduce using rule 28 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression GT expression .)
    PLUS            shift and go to state 20
    SUB             shift and go to state 21
    MOREQ           shift and go to state 22
    LESEQ           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25
    EQ              shift and go to state 26
    NE              shift and go to state 27
    DIS             shift and go to state 28

  ! PLUS            [ reduce using rule 28 (expression -> expression GT expression .) ]
  ! SUB             [ reduce using rule 28 (expression -> expression GT expression .) ]
  ! MOREQ           [ reduce using rule 28 (expression -> expression GT expression .) ]
  ! LESEQ           [ reduce using rule 28 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 28 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 28 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 28 (expression -> expression GT expression .) ]
  ! NE              [ reduce using rule 28 (expression -> expression GT expression .) ]
  ! DIS             [ reduce using rule 28 (expression -> expression GT expression .) ]


state 44

    (29) expression -> expression EQ expression .
    (23) expression -> expression . PLUS term
    (24) expression -> expression . SUB term
    (25) expression -> expression . MOREQ expression
    (26) expression -> expression . LESEQ expression
    (27) expression -> expression . LT expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NE expression
    (31) expression -> expression . DIS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MOREQ resolved as shift
  ! shift/reduce conflict for LESEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for DIS resolved as shift
    RBR             reduce using rule 29 (expression -> expression EQ expression .)
    COMMA           reduce using rule 29 (expression -> expression EQ expression .)
    POW             reduce using rule 29 (expression -> expression EQ expression .)
    MULT            reduce using rule 29 (expression -> expression EQ expression .)
    CON             reduce using rule 29 (expression -> expression EQ expression .)
    DIV             reduce using rule 29 (expression -> expression EQ expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression EQ expression .)
    PLUS            shift and go to state 20
    SUB             shift and go to state 21
    MOREQ           shift and go to state 22
    LESEQ           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25
    EQ              shift and go to state 26
    NE              shift and go to state 27
    DIS             shift and go to state 28

  ! PLUS            [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! SUB             [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! MOREQ           [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! LESEQ           [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! NE              [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! DIS             [ reduce using rule 29 (expression -> expression EQ expression .) ]


state 45

    (30) expression -> expression NE expression .
    (23) expression -> expression . PLUS term
    (24) expression -> expression . SUB term
    (25) expression -> expression . MOREQ expression
    (26) expression -> expression . LESEQ expression
    (27) expression -> expression . LT expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NE expression
    (31) expression -> expression . DIS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MOREQ resolved as shift
  ! shift/reduce conflict for LESEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for DIS resolved as shift
    RBR             reduce using rule 30 (expression -> expression NE expression .)
    COMMA           reduce using rule 30 (expression -> expression NE expression .)
    POW             reduce using rule 30 (expression -> expression NE expression .)
    MULT            reduce using rule 30 (expression -> expression NE expression .)
    CON             reduce using rule 30 (expression -> expression NE expression .)
    DIV             reduce using rule 30 (expression -> expression NE expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression NE expression .)
    PLUS            shift and go to state 20
    SUB             shift and go to state 21
    MOREQ           shift and go to state 22
    LESEQ           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25
    EQ              shift and go to state 26
    NE              shift and go to state 27
    DIS             shift and go to state 28

  ! PLUS            [ reduce using rule 30 (expression -> expression NE expression .) ]
  ! SUB             [ reduce using rule 30 (expression -> expression NE expression .) ]
  ! MOREQ           [ reduce using rule 30 (expression -> expression NE expression .) ]
  ! LESEQ           [ reduce using rule 30 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 30 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 30 (expression -> expression NE expression .) ]
  ! EQ              [ reduce using rule 30 (expression -> expression NE expression .) ]
  ! NE              [ reduce using rule 30 (expression -> expression NE expression .) ]
  ! DIS             [ reduce using rule 30 (expression -> expression NE expression .) ]


state 46

    (31) expression -> expression DIS term .
    (33) term -> term . MULT factor
    (34) term -> term . CON factor
    (35) term -> term . DIV factor

  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for CON resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    PLUS            reduce using rule 31 (expression -> expression DIS term .)
    SUB             reduce using rule 31 (expression -> expression DIS term .)
    MOREQ           reduce using rule 31 (expression -> expression DIS term .)
    LESEQ           reduce using rule 31 (expression -> expression DIS term .)
    LT              reduce using rule 31 (expression -> expression DIS term .)
    GT              reduce using rule 31 (expression -> expression DIS term .)
    EQ              reduce using rule 31 (expression -> expression DIS term .)
    NE              reduce using rule 31 (expression -> expression DIS term .)
    DIS             reduce using rule 31 (expression -> expression DIS term .)
    RBR             reduce using rule 31 (expression -> expression DIS term .)
    COMMA           reduce using rule 31 (expression -> expression DIS term .)
    POW             reduce using rule 31 (expression -> expression DIS term .)
    SEMICOLON       reduce using rule 31 (expression -> expression DIS term .)
    MULT            shift and go to state 29
    CON             shift and go to state 30
    DIV             shift and go to state 31

  ! MULT            [ reduce using rule 31 (expression -> expression DIS term .) ]
  ! CON             [ reduce using rule 31 (expression -> expression DIS term .) ]
  ! DIV             [ reduce using rule 31 (expression -> expression DIS term .) ]


state 47

    (33) term -> term MULT factor .
    (41) factor -> factor . POW expression

  ! shift/reduce conflict for POW resolved as shift
    MULT            reduce using rule 33 (term -> term MULT factor .)
    CON             reduce using rule 33 (term -> term MULT factor .)
    DIV             reduce using rule 33 (term -> term MULT factor .)
    PLUS            reduce using rule 33 (term -> term MULT factor .)
    SUB             reduce using rule 33 (term -> term MULT factor .)
    MOREQ           reduce using rule 33 (term -> term MULT factor .)
    LESEQ           reduce using rule 33 (term -> term MULT factor .)
    LT              reduce using rule 33 (term -> term MULT factor .)
    GT              reduce using rule 33 (term -> term MULT factor .)
    EQ              reduce using rule 33 (term -> term MULT factor .)
    NE              reduce using rule 33 (term -> term MULT factor .)
    DIS             reduce using rule 33 (term -> term MULT factor .)
    RBR             reduce using rule 33 (term -> term MULT factor .)
    COMMA           reduce using rule 33 (term -> term MULT factor .)
    SEMICOLON       reduce using rule 33 (term -> term MULT factor .)
    POW             shift and go to state 32

  ! POW             [ reduce using rule 33 (term -> term MULT factor .) ]


state 48

    (34) term -> term CON factor .
    (41) factor -> factor . POW expression

  ! shift/reduce conflict for POW resolved as shift
    MULT            reduce using rule 34 (term -> term CON factor .)
    CON             reduce using rule 34 (term -> term CON factor .)
    DIV             reduce using rule 34 (term -> term CON factor .)
    PLUS            reduce using rule 34 (term -> term CON factor .)
    SUB             reduce using rule 34 (term -> term CON factor .)
    MOREQ           reduce using rule 34 (term -> term CON factor .)
    LESEQ           reduce using rule 34 (term -> term CON factor .)
    LT              reduce using rule 34 (term -> term CON factor .)
    GT              reduce using rule 34 (term -> term CON factor .)
    EQ              reduce using rule 34 (term -> term CON factor .)
    NE              reduce using rule 34 (term -> term CON factor .)
    DIS             reduce using rule 34 (term -> term CON factor .)
    RBR             reduce using rule 34 (term -> term CON factor .)
    COMMA           reduce using rule 34 (term -> term CON factor .)
    SEMICOLON       reduce using rule 34 (term -> term CON factor .)
    POW             shift and go to state 32

  ! POW             [ reduce using rule 34 (term -> term CON factor .) ]


state 49

    (35) term -> term DIV factor .
    (41) factor -> factor . POW expression

  ! shift/reduce conflict for POW resolved as shift
    MULT            reduce using rule 35 (term -> term DIV factor .)
    CON             reduce using rule 35 (term -> term DIV factor .)
    DIV             reduce using rule 35 (term -> term DIV factor .)
    PLUS            reduce using rule 35 (term -> term DIV factor .)
    SUB             reduce using rule 35 (term -> term DIV factor .)
    MOREQ           reduce using rule 35 (term -> term DIV factor .)
    LESEQ           reduce using rule 35 (term -> term DIV factor .)
    LT              reduce using rule 35 (term -> term DIV factor .)
    GT              reduce using rule 35 (term -> term DIV factor .)
    EQ              reduce using rule 35 (term -> term DIV factor .)
    NE              reduce using rule 35 (term -> term DIV factor .)
    DIS             reduce using rule 35 (term -> term DIV factor .)
    RBR             reduce using rule 35 (term -> term DIV factor .)
    COMMA           reduce using rule 35 (term -> term DIV factor .)
    SEMICOLON       reduce using rule 35 (term -> term DIV factor .)
    POW             shift and go to state 32

  ! POW             [ reduce using rule 35 (term -> term DIV factor .) ]


state 50

    (41) factor -> factor POW expression .
    (23) expression -> expression . PLUS term
    (24) expression -> expression . SUB term
    (25) expression -> expression . MOREQ expression
    (26) expression -> expression . LESEQ expression
    (27) expression -> expression . LT expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NE expression
    (31) expression -> expression . DIS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MOREQ resolved as shift
  ! shift/reduce conflict for LESEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for DIS resolved as shift
    POW             reduce using rule 41 (factor -> factor POW expression .)
    MULT            reduce using rule 41 (factor -> factor POW expression .)
    CON             reduce using rule 41 (factor -> factor POW expression .)
    DIV             reduce using rule 41 (factor -> factor POW expression .)
    RBR             reduce using rule 41 (factor -> factor POW expression .)
    COMMA           reduce using rule 41 (factor -> factor POW expression .)
    SEMICOLON       reduce using rule 41 (factor -> factor POW expression .)
    PLUS            shift and go to state 20
    SUB             shift and go to state 21
    MOREQ           shift and go to state 22
    LESEQ           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25
    EQ              shift and go to state 26
    NE              shift and go to state 27
    DIS             shift and go to state 28

  ! PLUS            [ reduce using rule 41 (factor -> factor POW expression .) ]
  ! SUB             [ reduce using rule 41 (factor -> factor POW expression .) ]
  ! MOREQ           [ reduce using rule 41 (factor -> factor POW expression .) ]
  ! LESEQ           [ reduce using rule 41 (factor -> factor POW expression .) ]
  ! LT              [ reduce using rule 41 (factor -> factor POW expression .) ]
  ! GT              [ reduce using rule 41 (factor -> factor POW expression .) ]
  ! EQ              [ reduce using rule 41 (factor -> factor POW expression .) ]
  ! NE              [ reduce using rule 41 (factor -> factor POW expression .) ]
  ! DIS             [ reduce using rule 41 (factor -> factor POW expression .) ]


state 51

    (16) funcvar -> ID LBR args RBR .

    POW             reduce using rule 16 (funcvar -> ID LBR args RBR .)
    MULT            reduce using rule 16 (funcvar -> ID LBR args RBR .)
    CON             reduce using rule 16 (funcvar -> ID LBR args RBR .)
    DIV             reduce using rule 16 (funcvar -> ID LBR args RBR .)
    PLUS            reduce using rule 16 (funcvar -> ID LBR args RBR .)
    SUB             reduce using rule 16 (funcvar -> ID LBR args RBR .)
    MOREQ           reduce using rule 16 (funcvar -> ID LBR args RBR .)
    LESEQ           reduce using rule 16 (funcvar -> ID LBR args RBR .)
    LT              reduce using rule 16 (funcvar -> ID LBR args RBR .)
    GT              reduce using rule 16 (funcvar -> ID LBR args RBR .)
    EQ              reduce using rule 16 (funcvar -> ID LBR args RBR .)
    NE              reduce using rule 16 (funcvar -> ID LBR args RBR .)
    DIS             reduce using rule 16 (funcvar -> ID LBR args RBR .)
    RBR             reduce using rule 16 (funcvar -> ID LBR args RBR .)
    COMMA           reduce using rule 16 (funcvar -> ID LBR args RBR .)
    SEMICOLON       reduce using rule 16 (funcvar -> ID LBR args RBR .)


state 52

    (4) func -> DEF ID LBR args RBR LFBR funcbody . RFBR
    (9) funcbody -> funcbody . if
    (10) funcbody -> funcbody . funcall
    (11) funcbody -> funcbody . assign
    (12) funcbody -> funcbody . while
    (13) funcbody -> funcbody . return
    (17) if -> . IF LBR expression RBR LFBR funcbody RFBR elsebranch
    (15) funcall -> . ID LBR args RBR SEMICOLON
    (14) assign -> . ID ASSIGN expression SEMICOLON
    (20) while -> . WHILE LBR expression RBR LFBR funcbody RFBR
    (21) return -> . RETURN LBR expression RBR SEMICOLON
    (22) return -> . RETURN LBR ID RBR SEMICOLON

    RFBR            shift and go to state 54
    IF              shift and go to state 60
    ID              shift and go to state 53
    WHILE           shift and go to state 61
    RETURN          shift and go to state 62

    if                             shift and go to state 55
    funcall                        shift and go to state 56
    assign                         shift and go to state 57
    while                          shift and go to state 58
    return                         shift and go to state 59

state 53

    (15) funcall -> ID . LBR args RBR SEMICOLON
    (14) assign -> ID . ASSIGN expression SEMICOLON

    LBR             shift and go to state 63
    ASSIGN          shift and go to state 64


state 54

    (4) func -> DEF ID LBR args RBR LFBR funcbody RFBR .

    $end            reduce using rule 4 (func -> DEF ID LBR args RBR LFBR funcbody RFBR .)
    DEF             reduce using rule 4 (func -> DEF ID LBR args RBR LFBR funcbody RFBR .)


state 55

    (9) funcbody -> funcbody if .

    RFBR            reduce using rule 9 (funcbody -> funcbody if .)
    IF              reduce using rule 9 (funcbody -> funcbody if .)
    ID              reduce using rule 9 (funcbody -> funcbody if .)
    WHILE           reduce using rule 9 (funcbody -> funcbody if .)
    RETURN          reduce using rule 9 (funcbody -> funcbody if .)


state 56

    (10) funcbody -> funcbody funcall .

    RFBR            reduce using rule 10 (funcbody -> funcbody funcall .)
    IF              reduce using rule 10 (funcbody -> funcbody funcall .)
    ID              reduce using rule 10 (funcbody -> funcbody funcall .)
    WHILE           reduce using rule 10 (funcbody -> funcbody funcall .)
    RETURN          reduce using rule 10 (funcbody -> funcbody funcall .)


state 57

    (11) funcbody -> funcbody assign .

    RFBR            reduce using rule 11 (funcbody -> funcbody assign .)
    IF              reduce using rule 11 (funcbody -> funcbody assign .)
    ID              reduce using rule 11 (funcbody -> funcbody assign .)
    WHILE           reduce using rule 11 (funcbody -> funcbody assign .)
    RETURN          reduce using rule 11 (funcbody -> funcbody assign .)


state 58

    (12) funcbody -> funcbody while .

    RFBR            reduce using rule 12 (funcbody -> funcbody while .)
    IF              reduce using rule 12 (funcbody -> funcbody while .)
    ID              reduce using rule 12 (funcbody -> funcbody while .)
    WHILE           reduce using rule 12 (funcbody -> funcbody while .)
    RETURN          reduce using rule 12 (funcbody -> funcbody while .)


state 59

    (13) funcbody -> funcbody return .

    RFBR            reduce using rule 13 (funcbody -> funcbody return .)
    IF              reduce using rule 13 (funcbody -> funcbody return .)
    ID              reduce using rule 13 (funcbody -> funcbody return .)
    WHILE           reduce using rule 13 (funcbody -> funcbody return .)
    RETURN          reduce using rule 13 (funcbody -> funcbody return .)


state 60

    (17) if -> IF . LBR expression RBR LFBR funcbody RFBR elsebranch

    LBR             shift and go to state 65


state 61

    (20) while -> WHILE . LBR expression RBR LFBR funcbody RFBR

    LBR             shift and go to state 66


state 62

    (21) return -> RETURN . LBR expression RBR SEMICOLON
    (22) return -> RETURN . LBR ID RBR SEMICOLON

    LBR             shift and go to state 67


state 63

    (15) funcall -> ID LBR . args RBR SEMICOLON
    (5) args -> .
    (6) args -> . expression
    (7) args -> . args COMMA expression
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    RBR             reduce using rule 5 (args -> .)
    COMMA           reduce using rule 5 (args -> .)
    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    args                           shift and go to state 68
    expression                     shift and go to state 10
    term                           shift and go to state 11
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 64

    (14) assign -> ID ASSIGN . expression SEMICOLON
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    expression                     shift and go to state 69
    term                           shift and go to state 11
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 65

    (17) if -> IF LBR . expression RBR LFBR funcbody RFBR elsebranch
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    expression                     shift and go to state 70
    term                           shift and go to state 11
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 66

    (20) while -> WHILE LBR . expression RBR LFBR funcbody RFBR
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    NUM             shift and go to state 13
    ID              shift and go to state 7
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    expression                     shift and go to state 71
    term                           shift and go to state 11
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 67

    (21) return -> RETURN LBR . expression RBR SEMICOLON
    (22) return -> RETURN LBR . ID RBR SEMICOLON
    (23) expression -> . expression PLUS term
    (24) expression -> . expression SUB term
    (25) expression -> . expression MOREQ expression
    (26) expression -> . expression LESEQ expression
    (27) expression -> . expression LT expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NE expression
    (31) expression -> . expression DIS term
    (32) expression -> . term
    (33) term -> . term MULT factor
    (34) term -> . term CON factor
    (35) term -> . term DIV factor
    (36) term -> . factor
    (37) factor -> . NUM
    (38) factor -> . funcvar
    (39) factor -> . ID
    (40) factor -> . DEN expression
    (41) factor -> . factor POW expression
    (42) factor -> . LBR expression RBR
    (16) funcvar -> . ID LBR args RBR

    ID              shift and go to state 73
    NUM             shift and go to state 13
    DEN             shift and go to state 15
    LBR             shift and go to state 8

    expression                     shift and go to state 72
    term                           shift and go to state 11
    factor                         shift and go to state 12
    funcvar                        shift and go to state 14

state 68

    (15) funcall -> ID LBR args . RBR SEMICOLON
    (7) args -> args . COMMA expression

    RBR             shift and go to state 74
    COMMA           shift and go to state 19


state 69

    (14) assign -> ID ASSIGN expression . SEMICOLON
    (23) expression -> expression . PLUS term
    (24) expression -> expression . SUB term
    (25) expression -> expression . MOREQ expression
    (26) expression -> expression . LESEQ expression
    (27) expression -> expression . LT expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NE expression
    (31) expression -> expression . DIS term

    SEMICOLON       shift and go to state 75
    PLUS            shift and go to state 20
    SUB             shift and go to state 21
    MOREQ           shift and go to state 22
    LESEQ           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25
    EQ              shift and go to state 26
    NE              shift and go to state 27
    DIS             shift and go to state 28


state 70

    (17) if -> IF LBR expression . RBR LFBR funcbody RFBR elsebranch
    (23) expression -> expression . PLUS term
    (24) expression -> expression . SUB term
    (25) expression -> expression . MOREQ expression
    (26) expression -> expression . LESEQ expression
    (27) expression -> expression . LT expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NE expression
    (31) expression -> expression . DIS term

    RBR             shift and go to state 76
    PLUS            shift and go to state 20
    SUB             shift and go to state 21
    MOREQ           shift and go to state 22
    LESEQ           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25
    EQ              shift and go to state 26
    NE              shift and go to state 27
    DIS             shift and go to state 28


state 71

    (20) while -> WHILE LBR expression . RBR LFBR funcbody RFBR
    (23) expression -> expression . PLUS term
    (24) expression -> expression . SUB term
    (25) expression -> expression . MOREQ expression
    (26) expression -> expression . LESEQ expression
    (27) expression -> expression . LT expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NE expression
    (31) expression -> expression . DIS term

    RBR             shift and go to state 77
    PLUS            shift and go to state 20
    SUB             shift and go to state 21
    MOREQ           shift and go to state 22
    LESEQ           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25
    EQ              shift and go to state 26
    NE              shift and go to state 27
    DIS             shift and go to state 28


state 72

    (21) return -> RETURN LBR expression . RBR SEMICOLON
    (23) expression -> expression . PLUS term
    (24) expression -> expression . SUB term
    (25) expression -> expression . MOREQ expression
    (26) expression -> expression . LESEQ expression
    (27) expression -> expression . LT expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NE expression
    (31) expression -> expression . DIS term

    RBR             shift and go to state 78
    PLUS            shift and go to state 20
    SUB             shift and go to state 21
    MOREQ           shift and go to state 22
    LESEQ           shift and go to state 23
    LT              shift and go to state 24
    GT              shift and go to state 25
    EQ              shift and go to state 26
    NE              shift and go to state 27
    DIS             shift and go to state 28


state 73

    (22) return -> RETURN LBR ID . RBR SEMICOLON
    (39) factor -> ID .
    (16) funcvar -> ID . LBR args RBR

  ! shift/reduce conflict for RBR resolved as shift
    RBR             shift and go to state 79
    POW             reduce using rule 39 (factor -> ID .)
    MULT            reduce using rule 39 (factor -> ID .)
    CON             reduce using rule 39 (factor -> ID .)
    DIV             reduce using rule 39 (factor -> ID .)
    PLUS            reduce using rule 39 (factor -> ID .)
    SUB             reduce using rule 39 (factor -> ID .)
    MOREQ           reduce using rule 39 (factor -> ID .)
    LESEQ           reduce using rule 39 (factor -> ID .)
    LT              reduce using rule 39 (factor -> ID .)
    GT              reduce using rule 39 (factor -> ID .)
    EQ              reduce using rule 39 (factor -> ID .)
    NE              reduce using rule 39 (factor -> ID .)
    DIS             reduce using rule 39 (factor -> ID .)
    LBR             shift and go to state 16

  ! RBR             [ reduce using rule 39 (factor -> ID .) ]


state 74

    (15) funcall -> ID LBR args RBR . SEMICOLON

    SEMICOLON       shift and go to state 80


state 75

    (14) assign -> ID ASSIGN expression SEMICOLON .

    RFBR            reduce using rule 14 (assign -> ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 14 (assign -> ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 14 (assign -> ID ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 14 (assign -> ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 14 (assign -> ID ASSIGN expression SEMICOLON .)


state 76

    (17) if -> IF LBR expression RBR . LFBR funcbody RFBR elsebranch

    LFBR            shift and go to state 81


state 77

    (20) while -> WHILE LBR expression RBR . LFBR funcbody RFBR

    LFBR            shift and go to state 82


state 78

    (21) return -> RETURN LBR expression RBR . SEMICOLON

    SEMICOLON       shift and go to state 83


state 79

    (22) return -> RETURN LBR ID RBR . SEMICOLON

    SEMICOLON       shift and go to state 84


state 80

    (15) funcall -> ID LBR args RBR SEMICOLON .

    RFBR            reduce using rule 15 (funcall -> ID LBR args RBR SEMICOLON .)
    IF              reduce using rule 15 (funcall -> ID LBR args RBR SEMICOLON .)
    ID              reduce using rule 15 (funcall -> ID LBR args RBR SEMICOLON .)
    WHILE           reduce using rule 15 (funcall -> ID LBR args RBR SEMICOLON .)
    RETURN          reduce using rule 15 (funcall -> ID LBR args RBR SEMICOLON .)


state 81

    (17) if -> IF LBR expression RBR LFBR . funcbody RFBR elsebranch
    (8) funcbody -> .
    (9) funcbody -> . funcbody if
    (10) funcbody -> . funcbody funcall
    (11) funcbody -> . funcbody assign
    (12) funcbody -> . funcbody while
    (13) funcbody -> . funcbody return

    RFBR            reduce using rule 8 (funcbody -> .)
    IF              reduce using rule 8 (funcbody -> .)
    ID              reduce using rule 8 (funcbody -> .)
    WHILE           reduce using rule 8 (funcbody -> .)
    RETURN          reduce using rule 8 (funcbody -> .)

    funcbody                       shift and go to state 85

state 82

    (20) while -> WHILE LBR expression RBR LFBR . funcbody RFBR
    (8) funcbody -> .
    (9) funcbody -> . funcbody if
    (10) funcbody -> . funcbody funcall
    (11) funcbody -> . funcbody assign
    (12) funcbody -> . funcbody while
    (13) funcbody -> . funcbody return

    RFBR            reduce using rule 8 (funcbody -> .)
    IF              reduce using rule 8 (funcbody -> .)
    ID              reduce using rule 8 (funcbody -> .)
    WHILE           reduce using rule 8 (funcbody -> .)
    RETURN          reduce using rule 8 (funcbody -> .)

    funcbody                       shift and go to state 86

state 83

    (21) return -> RETURN LBR expression RBR SEMICOLON .

    RFBR            reduce using rule 21 (return -> RETURN LBR expression RBR SEMICOLON .)
    IF              reduce using rule 21 (return -> RETURN LBR expression RBR SEMICOLON .)
    ID              reduce using rule 21 (return -> RETURN LBR expression RBR SEMICOLON .)
    WHILE           reduce using rule 21 (return -> RETURN LBR expression RBR SEMICOLON .)
    RETURN          reduce using rule 21 (return -> RETURN LBR expression RBR SEMICOLON .)


state 84

    (22) return -> RETURN LBR ID RBR SEMICOLON .

    RFBR            reduce using rule 22 (return -> RETURN LBR ID RBR SEMICOLON .)
    IF              reduce using rule 22 (return -> RETURN LBR ID RBR SEMICOLON .)
    ID              reduce using rule 22 (return -> RETURN LBR ID RBR SEMICOLON .)
    WHILE           reduce using rule 22 (return -> RETURN LBR ID RBR SEMICOLON .)
    RETURN          reduce using rule 22 (return -> RETURN LBR ID RBR SEMICOLON .)


state 85

    (17) if -> IF LBR expression RBR LFBR funcbody . RFBR elsebranch
    (9) funcbody -> funcbody . if
    (10) funcbody -> funcbody . funcall
    (11) funcbody -> funcbody . assign
    (12) funcbody -> funcbody . while
    (13) funcbody -> funcbody . return
    (17) if -> . IF LBR expression RBR LFBR funcbody RFBR elsebranch
    (15) funcall -> . ID LBR args RBR SEMICOLON
    (14) assign -> . ID ASSIGN expression SEMICOLON
    (20) while -> . WHILE LBR expression RBR LFBR funcbody RFBR
    (21) return -> . RETURN LBR expression RBR SEMICOLON
    (22) return -> . RETURN LBR ID RBR SEMICOLON

    RFBR            shift and go to state 87
    IF              shift and go to state 60
    ID              shift and go to state 53
    WHILE           shift and go to state 61
    RETURN          shift and go to state 62

    if                             shift and go to state 55
    funcall                        shift and go to state 56
    assign                         shift and go to state 57
    while                          shift and go to state 58
    return                         shift and go to state 59

state 86

    (20) while -> WHILE LBR expression RBR LFBR funcbody . RFBR
    (9) funcbody -> funcbody . if
    (10) funcbody -> funcbody . funcall
    (11) funcbody -> funcbody . assign
    (12) funcbody -> funcbody . while
    (13) funcbody -> funcbody . return
    (17) if -> . IF LBR expression RBR LFBR funcbody RFBR elsebranch
    (15) funcall -> . ID LBR args RBR SEMICOLON
    (14) assign -> . ID ASSIGN expression SEMICOLON
    (20) while -> . WHILE LBR expression RBR LFBR funcbody RFBR
    (21) return -> . RETURN LBR expression RBR SEMICOLON
    (22) return -> . RETURN LBR ID RBR SEMICOLON

    RFBR            shift and go to state 88
    IF              shift and go to state 60
    ID              shift and go to state 53
    WHILE           shift and go to state 61
    RETURN          shift and go to state 62

    if                             shift and go to state 55
    funcall                        shift and go to state 56
    assign                         shift and go to state 57
    while                          shift and go to state 58
    return                         shift and go to state 59

state 87

    (17) if -> IF LBR expression RBR LFBR funcbody RFBR . elsebranch
    (18) elsebranch -> .
    (19) elsebranch -> . ELSE LFBR funcbody RFBR

    RFBR            reduce using rule 18 (elsebranch -> .)
    IF              reduce using rule 18 (elsebranch -> .)
    ID              reduce using rule 18 (elsebranch -> .)
    WHILE           reduce using rule 18 (elsebranch -> .)
    RETURN          reduce using rule 18 (elsebranch -> .)
    ELSE            shift and go to state 90

    elsebranch                     shift and go to state 89

state 88

    (20) while -> WHILE LBR expression RBR LFBR funcbody RFBR .

    RFBR            reduce using rule 20 (while -> WHILE LBR expression RBR LFBR funcbody RFBR .)
    IF              reduce using rule 20 (while -> WHILE LBR expression RBR LFBR funcbody RFBR .)
    ID              reduce using rule 20 (while -> WHILE LBR expression RBR LFBR funcbody RFBR .)
    WHILE           reduce using rule 20 (while -> WHILE LBR expression RBR LFBR funcbody RFBR .)
    RETURN          reduce using rule 20 (while -> WHILE LBR expression RBR LFBR funcbody RFBR .)


state 89

    (17) if -> IF LBR expression RBR LFBR funcbody RFBR elsebranch .

    RFBR            reduce using rule 17 (if -> IF LBR expression RBR LFBR funcbody RFBR elsebranch .)
    IF              reduce using rule 17 (if -> IF LBR expression RBR LFBR funcbody RFBR elsebranch .)
    ID              reduce using rule 17 (if -> IF LBR expression RBR LFBR funcbody RFBR elsebranch .)
    WHILE           reduce using rule 17 (if -> IF LBR expression RBR LFBR funcbody RFBR elsebranch .)
    RETURN          reduce using rule 17 (if -> IF LBR expression RBR LFBR funcbody RFBR elsebranch .)


state 90

    (19) elsebranch -> ELSE . LFBR funcbody RFBR

    LFBR            shift and go to state 91


state 91

    (19) elsebranch -> ELSE LFBR . funcbody RFBR
    (8) funcbody -> .
    (9) funcbody -> . funcbody if
    (10) funcbody -> . funcbody funcall
    (11) funcbody -> . funcbody assign
    (12) funcbody -> . funcbody while
    (13) funcbody -> . funcbody return

    RFBR            reduce using rule 8 (funcbody -> .)
    IF              reduce using rule 8 (funcbody -> .)
    ID              reduce using rule 8 (funcbody -> .)
    WHILE           reduce using rule 8 (funcbody -> .)
    RETURN          reduce using rule 8 (funcbody -> .)

    funcbody                       shift and go to state 92

state 92

    (19) elsebranch -> ELSE LFBR funcbody . RFBR
    (9) funcbody -> funcbody . if
    (10) funcbody -> funcbody . funcall
    (11) funcbody -> funcbody . assign
    (12) funcbody -> funcbody . while
    (13) funcbody -> funcbody . return
    (17) if -> . IF LBR expression RBR LFBR funcbody RFBR elsebranch
    (15) funcall -> . ID LBR args RBR SEMICOLON
    (14) assign -> . ID ASSIGN expression SEMICOLON
    (20) while -> . WHILE LBR expression RBR LFBR funcbody RFBR
    (21) return -> . RETURN LBR expression RBR SEMICOLON
    (22) return -> . RETURN LBR ID RBR SEMICOLON

    RFBR            shift and go to state 93
    IF              shift and go to state 60
    ID              shift and go to state 53
    WHILE           shift and go to state 61
    RETURN          shift and go to state 62

    if                             shift and go to state 55
    funcall                        shift and go to state 56
    assign                         shift and go to state 57
    while                          shift and go to state 58
    return                         shift and go to state 59

state 93

    (19) elsebranch -> ELSE LFBR funcbody RFBR .

    RFBR            reduce using rule 19 (elsebranch -> ELSE LFBR funcbody RFBR .)
    IF              reduce using rule 19 (elsebranch -> ELSE LFBR funcbody RFBR .)
    ID              reduce using rule 19 (elsebranch -> ELSE LFBR funcbody RFBR .)
    WHILE           reduce using rule 19 (elsebranch -> ELSE LFBR funcbody RFBR .)
    RETURN          reduce using rule 19 (elsebranch -> ELSE LFBR funcbody RFBR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MULT in state 11 resolved as shift
WARNING: shift/reduce conflict for CON in state 11 resolved as shift
WARNING: shift/reduce conflict for DIV in state 11 resolved as shift
WARNING: shift/reduce conflict for POW in state 12 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 33 resolved as shift
WARNING: shift/reduce conflict for SUB in state 33 resolved as shift
WARNING: shift/reduce conflict for MOREQ in state 33 resolved as shift
WARNING: shift/reduce conflict for LESEQ in state 33 resolved as shift
WARNING: shift/reduce conflict for LT in state 33 resolved as shift
WARNING: shift/reduce conflict for GT in state 33 resolved as shift
WARNING: shift/reduce conflict for EQ in state 33 resolved as shift
WARNING: shift/reduce conflict for NE in state 33 resolved as shift
WARNING: shift/reduce conflict for DIS in state 33 resolved as shift
WARNING: shift/reduce conflict for MULT in state 38 resolved as shift
WARNING: shift/reduce conflict for CON in state 38 resolved as shift
WARNING: shift/reduce conflict for DIV in state 38 resolved as shift
WARNING: shift/reduce conflict for MULT in state 39 resolved as shift
WARNING: shift/reduce conflict for CON in state 39 resolved as shift
WARNING: shift/reduce conflict for DIV in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 40 resolved as shift
WARNING: shift/reduce conflict for SUB in state 40 resolved as shift
WARNING: shift/reduce conflict for MOREQ in state 40 resolved as shift
WARNING: shift/reduce conflict for LESEQ in state 40 resolved as shift
WARNING: shift/reduce conflict for LT in state 40 resolved as shift
WARNING: shift/reduce conflict for GT in state 40 resolved as shift
WARNING: shift/reduce conflict for EQ in state 40 resolved as shift
WARNING: shift/reduce conflict for NE in state 40 resolved as shift
WARNING: shift/reduce conflict for DIS in state 40 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 41 resolved as shift
WARNING: shift/reduce conflict for SUB in state 41 resolved as shift
WARNING: shift/reduce conflict for MOREQ in state 41 resolved as shift
WARNING: shift/reduce conflict for LESEQ in state 41 resolved as shift
WARNING: shift/reduce conflict for LT in state 41 resolved as shift
WARNING: shift/reduce conflict for GT in state 41 resolved as shift
WARNING: shift/reduce conflict for EQ in state 41 resolved as shift
WARNING: shift/reduce conflict for NE in state 41 resolved as shift
WARNING: shift/reduce conflict for DIS in state 41 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 42 resolved as shift
WARNING: shift/reduce conflict for SUB in state 42 resolved as shift
WARNING: shift/reduce conflict for MOREQ in state 42 resolved as shift
WARNING: shift/reduce conflict for LESEQ in state 42 resolved as shift
WARNING: shift/reduce conflict for LT in state 42 resolved as shift
WARNING: shift/reduce conflict for GT in state 42 resolved as shift
WARNING: shift/reduce conflict for EQ in state 42 resolved as shift
WARNING: shift/reduce conflict for NE in state 42 resolved as shift
WARNING: shift/reduce conflict for DIS in state 42 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 43 resolved as shift
WARNING: shift/reduce conflict for SUB in state 43 resolved as shift
WARNING: shift/reduce conflict for MOREQ in state 43 resolved as shift
WARNING: shift/reduce conflict for LESEQ in state 43 resolved as shift
WARNING: shift/reduce conflict for LT in state 43 resolved as shift
WARNING: shift/reduce conflict for GT in state 43 resolved as shift
WARNING: shift/reduce conflict for EQ in state 43 resolved as shift
WARNING: shift/reduce conflict for NE in state 43 resolved as shift
WARNING: shift/reduce conflict for DIS in state 43 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 44 resolved as shift
WARNING: shift/reduce conflict for SUB in state 44 resolved as shift
WARNING: shift/reduce conflict for MOREQ in state 44 resolved as shift
WARNING: shift/reduce conflict for LESEQ in state 44 resolved as shift
WARNING: shift/reduce conflict for LT in state 44 resolved as shift
WARNING: shift/reduce conflict for GT in state 44 resolved as shift
WARNING: shift/reduce conflict for EQ in state 44 resolved as shift
WARNING: shift/reduce conflict for NE in state 44 resolved as shift
WARNING: shift/reduce conflict for DIS in state 44 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 45 resolved as shift
WARNING: shift/reduce conflict for SUB in state 45 resolved as shift
WARNING: shift/reduce conflict for MOREQ in state 45 resolved as shift
WARNING: shift/reduce conflict for LESEQ in state 45 resolved as shift
WARNING: shift/reduce conflict for LT in state 45 resolved as shift
WARNING: shift/reduce conflict for GT in state 45 resolved as shift
WARNING: shift/reduce conflict for EQ in state 45 resolved as shift
WARNING: shift/reduce conflict for NE in state 45 resolved as shift
WARNING: shift/reduce conflict for DIS in state 45 resolved as shift
WARNING: shift/reduce conflict for MULT in state 46 resolved as shift
WARNING: shift/reduce conflict for CON in state 46 resolved as shift
WARNING: shift/reduce conflict for DIV in state 46 resolved as shift
WARNING: shift/reduce conflict for POW in state 47 resolved as shift
WARNING: shift/reduce conflict for POW in state 48 resolved as shift
WARNING: shift/reduce conflict for POW in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
WARNING: shift/reduce conflict for SUB in state 50 resolved as shift
WARNING: shift/reduce conflict for MOREQ in state 50 resolved as shift
WARNING: shift/reduce conflict for LESEQ in state 50 resolved as shift
WARNING: shift/reduce conflict for LT in state 50 resolved as shift
WARNING: shift/reduce conflict for GT in state 50 resolved as shift
WARNING: shift/reduce conflict for EQ in state 50 resolved as shift
WARNING: shift/reduce conflict for NE in state 50 resolved as shift
WARNING: shift/reduce conflict for DIS in state 50 resolved as shift
WARNING: shift/reduce conflict for RBR in state 73 resolved as shift
